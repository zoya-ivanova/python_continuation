# Вручную создайте список с целыми числами, которые повторяются. Получите новый список, 
# который содержит уникальные (без повтора) элементы исходного списка. 

# *Подготовьте два решения, короткое и длинное, которое 
# не использует другие коллекции помимо списков.
my_list = []


# Пользователь вводит данные. Сделайте проверку данных 
# и преобразуйте если возможно в один из вариантов ниже:
# Целое положительное число
# Вещественное положительное или отрицательное число
# Строку в нижнем регистре, если в строке есть 
# хотя бы одна заглавная буква
# Строку в верхнем регистре в остальных случаях


# Создайте вручную кортеж содержащий элементы разных типов. 
# Получите из него словарь списков, где:
# ключ — тип элемента,
# значение — список элементов данного типа.

my_tuple = (1, 'hello', 3.14, True, 'world', 42)

result_dict = {}

for element in my_tuple:
    element_type = type(element).__name__
    if element_type not in result_dict:
        result_dict[element_type] = []
    result_dict[element_type].append(element)

print(result_dict)

# Создайте вручную список с повторяющимися элементами.
# Удалите из него все элементы, которые встречаются дважды.

from collections import Counter

my_list = [5, 1, 1, 'yes', 'yes', 'hello', 'hello', 'hello']

my_dict = {}

for item in my_list:
    if item not in my_dict.keys():
        my_dict[item] = 1
    else:
        my_dict[item] += 1

my_dict2 = Counter(my_list)

for k, v in my_dict.items():
    if v == 2:
        my_list.remove(k)
        my_list.remove(k)
print(my_dict)
print(my_dict2)
print(my_list)


# Создайте вручную список с повторяющимися целыми числами. 
# Сформируйте список с порядковыми номерами 
# нечётных элементов исходного списка. 
# Нумерация начинается с единицы.
my_list = [3, 5, 7, 2, 9, 2, 7, 5, 5, 2, 8]

my_list1 = [i for i, j in enumerate (my_list, 1) if j % 2 != 0]
print(my_list1)

# Пользователь вводит строку текста. Вывести каждое слово с новой строки.
# Слова нумеруются начиная с единицы.
# Слова выводятся отсортированными согласно кодировки Unicode.
# Текст выравнивается по правому краю так, чтобы у самого длинного 
# слова был один пробел между ним и номером строки.
string = "Пользователь вводит строку текста. Вывести каждое слово с новой строки."

my_list = sorted(string.replace(".", "").lower().split())
max_len = len(max(my_list, key=len))
for i, word in enumerate(my_list, 1):
    print(f"{i:02} {word:>{max_len}}")

# Пользователь вводит строку текста. 
# Подсчитайте сколько раз встречается 
# каждая буква в строке без использования 
# метода count и с ним. 
# Результат сохраните в словаре, где ключ — символ, а значение — частота встречи 
# символа в строке. 
# Обратите внимание на порядок ключей. Объясните почему они совпадают 
# или не совпадают в ваших решениях.

from collections import Counter

string = "Пользователь вводит строку текста."
print(Counter(string))

my_dict = {}
for s in string:
    my_dict[s] = string.count(s)
print(my_dict)

# Три друга взяли вещи в поход. Сформируйте 
# словарь, где ключ — имя друга, а значение — 
# кортеж вещей. Ответьте на вопросы:
# Какие вещи взяли все три друга
# Какие вещи уникальны, есть только у одного друга
# Какие вещи есть у всех друзей кроме одного 
# и имя того, у кого данная вещь отсутствует
# Для решения используйте операции 
# с множествами. Код должен расширяться 
# на любое большее количество друзей.

my_dict = {"Ира": ('палатка', 'спальный мешок', 'рюкзак'),
           'Борис': ('рюкзак', 'кружка', 'фонарик'),
           'Виктор': ('палатка', 'палка', 'фонарик', 'рюкзак')}
my_set = set(list(my_dict.values())[0])
print(my_set)
for element in my_dict.values():
    my_set = my_set.intersection(set(element))
print(my_set)
new_dict = {}
for value in my_dict.values():
    for item in value:
        if item not in new_dict:
            new_dict[item] = 0
        new_dict[item] +=1
for key, value in new_dict.items():
    if value == 1:
        print(f"{key} есть только у одного")
for key, value in new_dict.items():
    if value == 2:
        print(f"{key} есть только у двоих")
        for name, goods in my_dict.items():
            if key not in goods:
                print(f"{name} не имеет {key}")
                break